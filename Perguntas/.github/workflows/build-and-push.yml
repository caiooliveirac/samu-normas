name: Build and Push Image

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/caiooliveirac/samu-normas

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ linux/amd64, linux/arm64 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps (test layer)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (SQLite)
        env:
          DB_ENGINE: sqlite
        run: |
          python manage.py test -v 2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::12}
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            REF_TAG=${GITHUB_REF##*/}
            echo "ref_tag=$REF_TAG" >> $GITHUB_OUTPUT
          fi
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            # normaliza para lowercase e substitui caracteres invÃ¡lidos
            BRANCH_SAFE=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]+/-/g')
            echo "branch_tag=$BRANCH_SAFE" >> $GITHUB_OUTPUT
          fi
          TS=$(date -u +%Y%m%d-%H%M)
          echo "timestamp_tag=$TS" >> $GITHUB_OUTPUT

      - name: Build and push (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.prod
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.ref_tag || steps.meta.outputs.sha_tag }}
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.branch_tag || '' }}
            ${{ env.IMAGE_NAME }}:ts-${{ steps.meta.outputs.timestamp_tag }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp_tag }}
            org.opencontainers.image.version=${{ steps.meta.outputs.ref_tag || steps.meta.outputs.sha_tag }}
            org.opencontainers.image.title=samu-normas
            org.opencontainers.image.description=Aplicacao Django Samu Normas (build CI)
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "Imagem publicada:" >> $GITHUB_STEP_SUMMARY
          echo "- $IMAGE_NAME:latest" >> $GITHUB_STEP_SUMMARY
          echo "- $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.meta.outputs.ref_tag }}" ]; then
            echo "- $IMAGE_NAME:${{ steps.meta.outputs.ref_tag }}" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -n "${{ steps.meta.outputs.branch_tag }}" ]; then
            echo "- $IMAGE_NAME:${{ steps.meta.outputs.branch_tag }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- $IMAGE_NAME:ts-${{ steps.meta.outputs.timestamp_tag }}" >> $GITHUB_STEP_SUMMARY
